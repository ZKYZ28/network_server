Index: app/src/main/java/org/helmo/murmurG6/models/Protocol.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.helmo.murmurG6.models;\r\n\r\nimport org.helmo.murmurG6.models.exceptions.InvalidTaskException;\r\n\r\nimport java.util.Map;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class Protocol {\r\n\r\n    private static final String RX_DIGIT = \"[0-9]\";\r\n    private static final String RX_LETTER = \"[a-zA-Z]\";\r\n    private static final String RX_LETTER_DIGIT = RX_LETTER + \"|\" + RX_DIGIT;\r\n    private static final String RX_SYMBOL = \"[\\\\x21-\\\\x2f]|[\\\\x3a-\\\\x40]|[\\\\x5B-\\\\x60]\";\r\n    private static final String RX_ROUND = \"(\" + RX_DIGIT + \"{2})\";\r\n    private static final String RX_PASSCHAR = \"[\\\\x22-\\\\xff]\";\r\n    private static final String RX_VISIBLE_CHARACTER = \"[\\\\x20-\\\\xff]\";\r\n    private static final String RX_INFORMATION_MESSAGE = \"((\" + RX_VISIBLE_CHARACTER + \"){0,200})\";\r\n    private static final String RX_RANDOM = \"((\" + RX_LETTER_DIGIT + \"|\" + RX_SYMBOL + \"){22})\";\r\n    private static final String RX_BCRYPT_SALT = \"((\" + RX_LETTER_DIGIT + \"|\" + RX_SYMBOL + \"){22})\";\r\n    private final static String RX_ESP = \"\\\\s\";\r\n    private static final String RX_DOMAIN = \"((\" + RX_LETTER_DIGIT + \"|\\\\.){5,200})\";\r\n    private static final String RX_USERNAME = \"((\" + RX_LETTER_DIGIT + \"){5,20})\";\r\n    public static final String RX_USER_DOMAIN = \"(\" + RX_USERNAME + \"@\" + RX_DOMAIN + \")\";\r\n    private static final String RX_MESSAGE = \"((\" + RX_VISIBLE_CHARACTER + \"){1,250})\";\r\n    private static final String RX_SHA3_EX = \"((\" + RX_LETTER_DIGIT + \"){30,200})\";\r\n\r\n    /*PARTS*/\r\n    private static final String RX_CRLF = \"(\\\\x0d\\\\x0a){0,1}\";\r\n    private static final String RX_SALT_SIZE = \"([0-9]{2})\";\r\n    public static final String RX_BCRYPT_HASH = \"(\\\\$2b\\\\$\\\\d{2}\\\\$(\" + RX_LETTER_DIGIT + \"|\" + RX_SYMBOL + \"){1,70})\";\r\n    public static final String TAG = \"#[a-zA-Z0-9]{5,20}\";\r\n    public static final String TAG_DOMAIN = \"(\" + TAG + \"@\" + RX_DOMAIN + \")\";\r\n\r\n    private static final String TAG_DOMAIN_OR_RX_USER_DOMAIN = \"(\" + RX_USER_DOMAIN + \"|\" + TAG_DOMAIN + \")\";\r\n\r\n\r\n    /*FULL*/\r\n    private final static Pattern RX_CONNECT_TASK = Pattern.compile(\"CONNECT\" + RX_ESP + \"(?<username>\" + RX_USERNAME + \")\" + RX_CRLF);\r\n    private final static Pattern RX_REGISTER_TASK = Pattern.compile(\"REGISTER\" + RX_ESP + \"(?<username>\" + RX_USERNAME + \")\" + RX_ESP + RX_SALT_SIZE + RX_ESP + \"(?<bcrypt>\" + RX_BCRYPT_HASH + \")\" + RX_CRLF);\r\n    private final static Pattern RX_FOLLOW_TASK = Pattern.compile(\"FOLLOW\" + RX_ESP + \"(?<domain>\" + TAG_DOMAIN_OR_RX_USER_DOMAIN + \")\" + RX_CRLF);\r\n    private final static Pattern RX_CONFIRM_TASK = Pattern.compile(\"CONFIRM\" + RX_ESP + \"(?<challenge>\" + RX_SHA3_EX + \")\" + RX_CRLF);\r\n    private final static Pattern RX_DISCONNECT_TASK = Pattern.compile(\"DISCONNECT\" + RX_CRLF);\r\n    private final static Pattern RX_MSG_TASK = Pattern.compile(\"MSG\" + RX_ESP + \"(?<message>\" + RX_MESSAGE + \")\" + RX_CRLF);\r\n\r\n    private static final Map<Pattern, TaskType> TYPE_MESSAGE_MAP = Map.of(\r\n            RX_CONNECT_TASK, TaskType.CONNECT,\r\n            RX_REGISTER_TASK, TaskType.REGISTER,\r\n            RX_FOLLOW_TASK, TaskType.FOLLOW,\r\n            RX_CONFIRM_TASK, TaskType.CONFIRM,\r\n            RX_DISCONNECT_TASK, TaskType.DISCONNECT,\r\n            RX_MSG_TASK, TaskType.MSG\r\n    );\r\n\r\n    public static Task buildTask(String command) /*throws InvalidTaskException */{\r\n        for (Map.Entry<Pattern, TaskType> entry : TYPE_MESSAGE_MAP.entrySet()) {\r\n            Matcher matcher = entry.getKey().matcher(command);\r\n            if (matcher.matches()) {\r\n                return new Task(entry.getValue(), matcher);\r\n            }\r\n        }\r\n        throw new InvalidTaskException(\"Tache invalide!\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/org/helmo/murmurG6/models/Protocol.java b/app/src/main/java/org/helmo/murmurG6/models/Protocol.java
--- a/app/src/main/java/org/helmo/murmurG6/models/Protocol.java	(revision 869f5631863f34f24ec513d64326653c08674bbf)
+++ b/app/src/main/java/org/helmo/murmurG6/models/Protocol.java	(date 1676572970397)
@@ -52,7 +52,7 @@
             RX_MSG_TASK, TaskType.MSG
     );
 
-    public static Task buildTask(String command) /*throws InvalidTaskException */{
+    public static Task buildTask(String command){
         for (Map.Entry<Pattern, TaskType> entry : TYPE_MESSAGE_MAP.entrySet()) {
             Matcher matcher = entry.getKey().matcher(command);
             if (matcher.matches()) {
